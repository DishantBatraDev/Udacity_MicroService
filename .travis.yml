matrix:
    include:
      - language: node_js
        node_js: 
          - 13
        Services: docker
        before_script:
          - cd udagram-feed-api
          - npm install
          - echo "no tests"
        script:
          - npm run build --prod
          - cd ./www
          - docker --version # print the version for logging
          - docker build -t udagram-api --build-arg POSTGRES_USERNAME=${POSTGRES_USERNAME} --build-arg  POSTGRES_PASSWORD=${POSTGRES_PASSWORD} --build-arg POSTGRES_DB=${POSTGRES_DB} --build-arg POSTGRES_HOST=${POSTGRES_HOST} --build-arg AWS_REGION=${AWS_REGION} --build-arg AWS_PROFILE=${AWS_PROFILE} --build-arg AWS_BUCKET=${AWS_BUCKET} --build-arg URL=${URL} --build-arg JWT_SECRET=${JWT_SECRET} --build-arg=ACCESS_KEY_ID=${ACCESS_KEY_ID}  --build-arg=SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY} .
          - docker tag udagram-api dishantbatra92/udagram-api:latest
        after_success:
          - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          - docker push dishantbatra92/udagram-api
  
      - language: node_js
        node_js: 
          - 13
        Services: docker
        before_script:
          - cd udagram-frontend
        script:
          - docker build -t udagram-frontend .
          - docker tag udagram-frontend dishantbatra92/udagram-frontend:latest
        after_success:
          - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          - docker push dishantbatra92/udagram-frontend
  
      - language: node_js
        node_js: 
          - 13
        Services: docker
        before_script:
          - cd udagram-reverse-proxy
        script:
          - docker build -t simple-reverse-proxy .
          - docker tag simple-reverse-proxy dishantbatra92/reverseproxy:latest
        after_success:
          - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          - docker push dishantbatra92/reverseproxy
      
      - language: node_js
        node_js: 
          - 13
        Services: docker
        before_script:
          - cd udagram-user-api
          - npm install
        script:
          - npm run build --prod
          - cd ./www
          - docker --version # print the version for logging
          - docker build -t udagram-api --build-arg POSTGRES_USERNAME=${POSTGRES_USERNAME} --build-arg  POSTGRES_PASSWORD=${POSTGRES_PASSWORD} --build-arg POSTGRES_DB=${POSTGRES_DB} --build-arg POSTGRES_HOST=${POSTGRES_HOST} --build-arg AWS_REGION=${AWS_REGION} --build-arg AWS_PROFILE=${AWS_PROFILE} --build-arg AWS_BUCKET=${AWS_BUCKET} --build-arg URL=${URL} --build-arg JWT_SECRET=${JWT_SECRET} --build-arg=ACCESS_KEY_ID=${ACCESS_KEY_ID}  --build-arg=SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY} .
          - docker tag udagram-api dishantbatra92/udagram-api:latest
        after_success:
          - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          - docker push dishantbatra92/udagram-api
  
  